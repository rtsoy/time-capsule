version: '3.7'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      - mongo
      - minio
      - create-bucket
    ports:
      - "8080:8080"

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}

  minio:
    image: minio/minio:latest
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "${MINIO_USERNAME}"
      MINIO_ROOT_PASSWORD: "${MINIO_PASSWORD}"
    volumes:
      - minio-storage:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MINIO_PORT}/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  create-bucket:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      mkdir -p /data;
      if [ ! -e /data/initialized ]; then
        /usr/bin/mc alias set myminio http://minio:9000 ${MINIO_USERNAME} ${MINIO_PASSWORD};
        /usr/bin/mc mb myminio/${BUCKET_NAME};
        /usr/bin/mc anonymous set public myminio/${BUCKET_NAME};
        touch /data/initialized;
      else
        echo 'Bucket already exists.';
      fi;
      exit 0;
      "

volumes:
  minio-storage:
