basePath: /
definitions:
  domain.Capsule:
    properties:
      createdAt:
        type: string
      id:
        type: string
      images:
        items:
          type: string
        type: array
      message:
        type: string
      openAt:
        type: string
      userID:
        type: string
    type: object
  domain.CreateCapsuleDTO:
    properties:
      message:
        type: string
      openAt:
        type: string
    type: object
  domain.CreateUserDTO:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  domain.LogInUserDTO:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  domain.UpdateCapsuleDTO:
    properties:
      message:
        type: string
      openAt:
        type: string
    type: object
  domain.User:
    properties:
      email:
        type: string
      id:
        type: string
      registeredAt:
        type: string
      username:
        type: string
    type: object
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  handler.tokenResponse:
    properties:
      token:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for TimeCapsule Application
  title: TimeCapsule
  version: "1.0"
paths:
  /api/v1/capsules:
    get:
      description: Retrieves all capsules
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Capsule'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetCapsules
      tags:
      - Capsules
    post:
      consumes:
      - application/json
      description: Creates new capsule
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.CreateCapsuleDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Capsule'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateCapsule
      tags:
      - Capsules
  /api/v1/capsules/{capsuleID}:
    delete:
      description: Removes capsule
      parameters:
      - description: capsuleID
        in: path
        name: capsuleID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetCapsule
      tags:
      - Capsules
    get:
      description: Retrieves capsule by ID
      parameters:
      - description: capsuleID
        in: path
        name: capsuleID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Capsule'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetCapsule
      tags:
      - Capsules
    patch:
      description: Updates capsule
      parameters:
      - description: capsuleID
        in: path
        name: capsuleID
        required: true
        type: string
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateCapsuleDTO'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetCapsule
      tags:
      - Capsules
  /api/v1/sign-in:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.LogInUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignIn
      tags:
      - Auth
  /api/v1/sign-up:
    post:
      consumes:
      - application/json
      description: Creates new account
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.CreateUserDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignUp
      tags:
      - Auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
